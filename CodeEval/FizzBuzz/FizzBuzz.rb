# https://www.codeeval.com/open_challenges/1/

# Players generally sit in a circle. The player designated to go first says the
# number "1", and each player thenceforth counts one number in turn. However,
# any number divisible by 'A' e.g. three is replaced by the word fizz and any
# divisible by 'B' e.g. five by the word buzz. Numbers divisible by both become
# fizz buzz. A player who hesitates or makes a mistake is either eliminated.
#
# Write a program that prints out the the pattern generated by such a scenario
# given the values of 'A'/'B' and 'N' which are read from an input text file.
# The input text file contains three space delimited numbers i.e. A, B, N. The
# program should then print out the final series of numbers using 'F' for fizz,
# 'B' for 'buzz' and 'FB' for fizz buzz.

def replace_fizz_buzz fizz=3, buzz=5, end_number=100
  return (1..end_number).map do |x|
    s = ''
    s << 'F' if (x % fizz).zero?
    s << 'B' if (x % buzz).zero?
    s.empty? ? x : s
  end.join(' ').to_s
end

File.open(ARGV[0]).each_line do |line|
  fizz, buzz, end_number = line.split.map(&:to_i)
  puts replace_fizz_buzz(fizz, buzz, end_number)
end

